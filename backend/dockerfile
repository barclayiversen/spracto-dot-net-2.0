# Start from a Debian-based image with the Go 1.x SDK
FROM golang:1.19 as builder

# Install CA certificates
RUN apt-get update && apt-get install -y ca-certificates && rm -rf /var/lib/apt/lists/*

# Create and change to the app directory.
WORKDIR /app

# Retrieve application dependencies.
# Copy go mod and sum files
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY . ./

# Build the binary.
# -o backend is naming the compiled binary as "backend".
RUN CGO_ENABLED=0 GOOS=linux go build -v -o backend

# Use the official Debian slim image for a lean production container.
FROM debian:buster-slim


# Copy the CA certificates
COPY --from=builder /etc/ssl/certs /etc/ssl/certs

# Copy the binary to the production image
COPY --from=builder /app/backend /backend

# Run the web service on container startup.
CMD ["/backend"]
