# Start from a Debian-based image with the Go 1.x SDK
FROM golang:1.19 as builder

# Create and change to the app directory.
WORKDIR /app

# Retrieve application dependencies.
# This allows the container build to reuse cached dependencies.
# Copy go mod and sum files
COPY go.* ./
RUN go mod download

# Copy local code to the container image.
COPY . ./

# Build the binary.
# -o backend is naming the compiled binary as "backend".
RUN CGO_ENABLED=0 GOOS=linux go build -v -o backend

# Use the official Debian slim image for a lean production container.
FROM debian:buster-slim
COPY --from=builder /app/backend /backend

# Run the web service on container startup.
CMD ["/backend"]
